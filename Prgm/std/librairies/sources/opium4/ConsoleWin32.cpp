#ifdef WIN32#include <ConsoleWin32.h>//-------------------------------------------------------------------CConsoleWin32::CConsoleWin32 () {	m_hStdOut=NULL;}//-------------------------------------------------------------------CConsoleWin32::~CConsoleWin32() {	if(m_stdFileDebug.m_pStream != NULL) m_stdFileDebug.Close();	if(m_hStdOut) {		FreeConsole();		CloseHandle(m_hStdOut);		m_hStdOut=NULL;	}}//-------------------------------------------------------------------void CConsoleWin32::StartDebugConsole(int nWidth, int nHeight,const char* pszfname) {	if(m_hStdOut) return;	AllocConsole();	SetConsoleTitle("Debug Window");	m_hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);	COORD co = {nWidth, nHeight };	SetConsoleScreenBufferSize(m_hStdOut, co);	if(pszfname)		m_stdFileDebug.Open(pszfname,			CFile::modeCreate | CFile::modeNoTruncate |CFile::modeReadWrite |CFile::typeText |CFile::shareDenyWrite);	co.X = co.Y = 0;	SetConsoleCursorPosition(m_hStdOut,co);}//-------------------------------------------------------------------void CConsoleWin32::DebugNewLine(void) {	CONSOLE_SCREEN_BUFFER_INFO csbiInfo;	if (! GetConsoleScreenBufferInfo(m_hStdOut, &csbiInfo)) return;	csbiInfo.dwCursorPosition.X = 0;	if ((csbiInfo.dwSize.Y - 1) == csbiInfo.dwCursorPosition.Y) {		SMALL_RECT srctWindow;		if(csbiInfo.srWindow.Top > 0) {			srctWindow.Top = -1;			srctWindow.Bottom = -1;			srctWindow.Left = 0;			srctWindow.Right = 0;			if (! SetConsoleWindowInfo(m_hStdOut,FALSE,&srctWindow)) {				return;			}		}	} else csbiInfo.dwCursorPosition.Y += 1;	if (! SetConsoleCursorPosition(m_hStdOut,csbiInfo.dwCursorPosition)) {		return;	}}//-------------------------------------------------------------------void CConsoleWin32::DebugPrintf(const char *szfmt, ...) {	char s[300];	va_list argptr;	int cnt;	va_start(argptr, szfmt);	cnt = vsprintf(s, szfmt, argptr);	va_end(argptr);	DWORD cCharsWritten;	if(m_hStdOut) {		DebugNewLine();		WriteConsole(m_hStdOut, s, strlen(s), &cCharsWritten, NULL);	}	if(m_stdFileDebug.m_pStream != NULL) {		CString str=s;		str += "\r\n";		m_stdFileDebug.WriteString(str);		m_stdFileDebug.Flush();	}}#endif /* WIN32 */